/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import graph.structure.Graph;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {

  @Test
  public void canAddNode(){
    Graph<String> graph = new Graph<>();

    assertNotNull(graph.addNode("A"));
  }

  @Test
  public void canAddEdge(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addNode("B");

    graph.addEdge("A", "B", 45);

    assertNotNull(graph.getNeighbors("A"));
  }

  @Test
  public void getAllNodes(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addNode("B");

    assertNotNull(graph.getNodes());
  }

  @Test
  public void getAllNeighbors(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addNode("B");

    graph.addEdge("A", "B", 45);

    assertNotNull(graph.getNeighbors("A"));
  }

  @Test
  public void getAllNeighborsWithWight(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addNode("B");

    graph.addEdge("A", "B", 45);

    assertNotNull(graph.getNeighbors("A"));
  }

  @Test
  public void getGraphSize(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addNode("B");

    assertEquals(2, graph.size());
  }

  @Test
  public void getOneNode(){
    Graph<String> graph = new Graph<>();
    graph.addNode("A");
    graph.addEdge("A", "A", 0);

    assertNotNull(graph.getNeighbors("A"));
  }

  @Test
  public void emptyGraph(){
    Graph<String> graph = new Graph<>();
    assertNull(graph.getNodes());
  }
}
